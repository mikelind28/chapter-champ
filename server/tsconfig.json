{
  "compilerOptions": {
    "declaration": true,
    /* Language and Environment */
    "target": "ES2020" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    
    /* Modules */
    "module": "ESNext" /* Specify what module code is generated. */,
    "moduleResolution": "Bundler" /* Specify how TypeScript looks up a file from a given module specifier. */,
    "skipLibCheck": true /* Skip type checking of all declaration files (*.d.ts) for faster builds. */,
    
    /* Root and Output Directories */
    "rootDir": "src" /* Specify the root folder within your source files. */,
    "outDir": "dist" /* Specify an output folder for all emitted files. */,

    /* JavaScript Support */
    "allowJs": true /* Allow JavaScript files to be a part of your program. Use the 'checkJs' option to get errors from these files. */,
    "checkJs": true /* Enable error reporting in type-checked JavaScript files. */,

    /* Interop Constraints */
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. */,
    "allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

    /* Type Checking */
    "strict": true /* Enable all strict type-checking options. */,
    "noUnusedLocals": true /* Report errors on unused local variables. */,
    "noUnusedParameters": true /* Report errors on unused function parameters. */,
    "noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in switch statements. */,
    "exactOptionalPropertyTypes": true /* Interpret optional property types as written, rather than adding 'undefined'. */,
    "noImplicitReturns": true /* Enable error reporting for code paths that do not explicitly return in a function. */,
    "noImplicitOverride": true /* Ensure overriding members in derived classes are marked with an override modifier. */,
    "useUnknownInCatchVariables": true /* Ensure 'unknown' is used for catch clause variables. */,

    /* Path Mapping for Cleaner Imports */
    "baseUrl": "./src" /* Set the base directory to 'src' for absolute imports. */,
    "paths": {
      "types/*": ["types/*"] /* Allow absolute imports for files inside src/types */
    }
  },
  "include": [
    "src",
    "src/types/**/*.ts" /* Explicitly include all TypeScript files inside the types folder */
  ],
  "typeRoots": [
    "./node_modules/@types",
    "./src/types" /* Ensure custom types in 'src/types' are included in compilation */
  ]
}